
import Repository.AdminRepository;
import Repository.MainOperations;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import models.Tokens.adminToken;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.FileReader;
import java.io.ObjectStreamException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Set;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author cesar
 */
public class AdminMenu extends javax.swing.JFrame {
    AdminRepository mainOperations = new MainOperations();
    static adminToken mainToken = new adminToken();

    boolean teachersShownToken = false;
    boolean studentsShownToken = false;
    boolean subjectsShownToken = false;
    boolean gradesShownToken = false;


    File teacherSettings = new File("src/main/java/resources/profesores.json");
    File studentSettings = new File("src/main/java/resources/alumnos.json");
    File subjectSettings = new File("src/main/java/resources/materias.json");

    private javax.swing.JButton btnAddTeacher;
    private javax.swing.JButton btnDeleteTeacher;
    private javax.swing.JButton btnUpdateTeacher;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;

    private javax.swing.JButton btnRemoveStudent;
    private javax.swing.JButton btnUpdateStudent;
    private javax.swing.JTable studentsTable;
    private javax.swing.JButton btnAddStudent;
    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JButton btnAddSubject;
    private javax.swing.JButton btnUpdateSubject;
    private javax.swing.JTable subjectsTable;
    private javax.swing.JScrollPane jScrollPane3;

    private javax.swing.JButton btnUpdateGrades;
    private javax.swing.JTable gradesTable;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox<String> cbGradesFilter;




    /**
     * Creates new form AdminMenu
     */
    public AdminMenu(adminToken admin) {
        if(admin.getNombre() == null){
            JOptionPane.showMessageDialog(null, "Error al iniciar sesión","Error",JOptionPane.ERROR_MESSAGE);
            this.dispose();
            System.exit(0);
        }else{
            mainToken = admin;
            initComponents();
            lblNombre.setText(mainToken.getNombre());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        btnShowGrades = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnShowTeachers = new javax.swing.JButton();
        btnShowStudents = new javax.swing.JButton();
        btnShowSubjects = new javax.swing.JButton();
        lblAdvertencia = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(1132, 740, 740, 740));
        setMaximizedBounds(new java.awt.Rectangle(1132, 740, 740, 740));
        setMaximumSize(new java.awt.Dimension(1132, 740));
        setMinimumSize(new java.awt.Dimension(1132, 740));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1132, 740));
        setSize(new java.awt.Dimension(1132, 740));
        getContentPane().setLayout(null);

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("X");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit);
        btnExit.setBounds(1070, 20, 50, 40);

        btnLogOut.setBackground(new java.awt.Color(255, 0, 0));
        btnLogOut.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setText("Log out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogOut);
        btnLogOut.setBounds(1010, 680, 110, 40);

        btnShowGrades.setBackground(new java.awt.Color(30, 30, 50));
        btnShowGrades.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
        btnShowGrades.setForeground(new java.awt.Color(255, 255, 255));
        btnShowGrades.setIcon(new javax.swing.ImageIcon("C:\\Users\\cesar\\Documents\\Universidad_UNEDL\\4tosemestre\\Estructura_archivos\\EstructuraArchivos\\src\\main\\java\\resources\\icons\\information.png")); // NOI18N
        btnShowGrades.setText("Calificaciones");
        btnShowGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowGradesActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowGrades);
        btnShowGrades.setBounds(800, 120, 240, 43);

        jLabel1.setFont(new java.awt.Font("Lemon", 1, 24)); // NOI18N
        jLabel1.setText("Administrador");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(480, 30, 220, 50);

        btnShowTeachers.setBackground(new java.awt.Color(30, 30, 50));
        btnShowTeachers.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
        btnShowTeachers.setForeground(new java.awt.Color(255, 255, 255));
        btnShowTeachers.setIcon(new javax.swing.ImageIcon("C:\\Users\\cesar\\Documents\\Universidad_UNEDL\\4tosemestre\\Estructura_archivos\\EstructuraArchivos\\src\\main\\java\\resources\\icons\\teacher (1).png")); // NOI18N
        btnShowTeachers.setText("Maestros");
        btnShowTeachers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowTeachersActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowTeachers);
        btnShowTeachers.setBounds(20, 120, 240, 43);

        btnShowStudents.setBackground(new java.awt.Color(30, 30, 50));
        btnShowStudents.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
        btnShowStudents.setForeground(new java.awt.Color(255, 255, 255));
        btnShowStudents.setIcon(new javax.swing.ImageIcon("C:\\Users\\cesar\\Documents\\Universidad_UNEDL\\4tosemestre\\Estructura_archivos\\EstructuraArchivos\\src\\main\\java\\resources\\icons\\boy-student.png")); // NOI18N
        btnShowStudents.setText("Alumnos");
        btnShowStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowStudentsActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowStudents);
        btnShowStudents.setBounds(280, 120, 240, 43);

        btnShowSubjects.setBackground(new java.awt.Color(30, 30, 50));
        btnShowSubjects.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
        btnShowSubjects.setForeground(new java.awt.Color(255, 255, 255));
        btnShowSubjects.setIcon(new javax.swing.ImageIcon("C:\\Users\\cesar\\Documents\\Universidad_UNEDL\\4tosemestre\\Estructura_archivos\\EstructuraArchivos\\src\\main\\java\\resources\\icons\\book.png")); // NOI18N
        btnShowSubjects.setText("Materias");
        btnShowSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSubjectsActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowSubjects);
        btnShowSubjects.setBounds(540, 120, 240, 43);

        lblAdvertencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\cesar\\Documents\\Universidad_UNEDL\\4tosemestre\\Estructura_archivos\\EstructuraArchivos\\src\\main\\java\\resources\\icons\\alert.png")); // NOI18N
        lblAdvertencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAdvertenciaMouseClicked(evt);
            }
        });
        getContentPane().add(lblAdvertencia);
        lblAdvertencia.setBounds(1060, 130, 30, 30);

        lblNombre.setFont(new java.awt.Font("Lemon", 0, 14)); // NOI18N
        lblNombre.setText("...");
        getContentPane().add(lblNombre);
        lblNombre.setBounds(40, 50, 340, 19);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro que deseas salir?", "Salir", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro que deseas cerrar sesión?", "Salir", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            Login newLogin = new Login();
            newLogin.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnShowGradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowGradesActionPerformed
        if(teachersShownToken){
            manageTeachersItems(true);
        }
        if(studentsShownToken){
            manageStudentItems(true);
        }
        if(subjectsShownToken){
            manageSubjectItems(true);
        }
        if (!gradesShownToken) {
            manageGradeItems(false);
        }
    }//GEN-LAST:event_btnShowGradesActionPerformed

    private void btnShowStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowStudentsActionPerformed
        if(teachersShownToken){
            manageTeachersItems(true);
        }
        if(gradesShownToken){
            manageGradeItems(true);
        }
        if (subjectsShownToken){
            manageSubjectItems(true);
        }
        if (!studentsShownToken) {
            manageStudentItems(false);
        }

    }//GEN-LAST:event_btnShowStudentsActionPerformed

    private void btnShowSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSubjectsActionPerformed
        if(teachersShownToken){
            manageTeachersItems(true);
        }
        if(studentsShownToken){
            manageStudentItems(true);
        }
        if(gradesShownToken){
            manageGradeItems(true);
        }
        if(!subjectsShownToken){
            manageSubjectItems(false);
        }


    }//GEN-LAST:event_btnShowSubjectsActionPerformed

    private void lblAdvertenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAdvertenciaMouseClicked
        JOptionPane.showMessageDialog(this, "En cada pestaña de los botones se podra modificar, eliminar, añadir y consultar cada uno de los registros", "WARNING", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_lblAdvertenciaMouseClicked

    private void btnShowTeachersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowTeachersActionPerformed
        if(studentsShownToken){
            manageStudentItems(true);
        }
        if(subjectsShownToken){
            manageSubjectItems(true);
        }
        if(gradesShownToken){
            manageGradeItems(true);
        }
        if (!teachersShownToken) {
            manageTeachersItems(false);
        }
    }//GEN-LAST:event_btnShowTeachersActionPerformed

    private void btnDeleteTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTeacherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteTeacherActionPerformed

    private void btnUpdateTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTeacherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateTeacherActionPerformed

    private void btnAddTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTeacherActionPerformed
        ArrayList<String> subjects = new ArrayList<>();
        JPanel formPanel = new JPanel();
        formPanel.setBounds(0, 0, 500, 500);
        JLabel lblTitle = new JLabel("Añadir maestro");
        lblTitle.setFont(new java.awt.Font("Lemon", 1, 20));
        formPanel.add(lblTitle);


        formPanel.setLayout(new BoxLayout(formPanel, BoxLayout.Y_AXIS));
        JPanel buttonPanel = new JPanel();

        /*
        JButton btnAdd = new JButton("+");
        btnAdd.setFont(new java.awt.Font("Lemon", 1, 20));
        btnAdd.setBackground(new java.awt.Color(255, 0, 0));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setToolTipText("Añadir materia");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTextField txtSubject = new JTextField(20);
                txtSubject.setFont(new java.awt.Font("Lemon", 1, 11));
                formPanel.add(txtSubject);
                formPanel.revalidate();
                formPanel.repaint();
            }
        });
        buttonPanel.add(btnAdd);

        JButton btnRemove = new JButton("-");
        btnRemove.setFont(new java.awt.Font("Lemon", 1, 20));
        btnRemove.setBackground(new java.awt.Color(38, 126, 241));
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formPanel.remove(formPanel.getComponentCount() - 1);
                formPanel.revalidate();
                formPanel.repaint();
            }
        });
        buttonPanel.add(btnRemove);

        */


        JLabel lblName = new JLabel("Nombre:");
        JTextField txtName = new JTextField(20);
        lblName.setFont(new java.awt.Font("Lemon", 1, 14));
        txtName.setFont(new java.awt.Font("Lemon", 1, 11));

        JLabel lblPaterno = new JLabel("Apellido paterno:");
        JTextField txtPaterno = new JTextField(20);
        lblPaterno.setFont(new java.awt.Font("Lemon", 1, 14));
        txtPaterno.setFont(new java.awt.Font("Lemon", 1, 11));

        JLabel lblMaterno = new JLabel("Apellido Materno:");
        JTextField txtMaterno = new JTextField(20);
        lblMaterno.setFont(new java.awt.Font("Lemon", 1, 14));
        txtMaterno.setFont(new java.awt.Font("Lemon", 1, 11));

        JLabel lblAge = new JLabel("Edad:");
        JTextField txtAge = new JTextField(20);
        lblAge.setFont(new java.awt.Font("Lemon", 1, 14));
        txtAge.setFont(new java.awt.Font("Lemon", 1, 11));


        JLabel lblSubject = new JLabel("Materia:");
        JTextField txtSubjects = new JTextField(20);
        lblSubject.setFont(new java.awt.Font("Lemon", 1, 14));
        txtSubjects.setFont(new java.awt.Font("Lemon", 1, 11));

        formPanel.add(lblName);
        formPanel.add(txtName);
        formPanel.add(lblPaterno);
        formPanel.add(txtPaterno);
        formPanel.add(lblMaterno);
        formPanel.add(txtMaterno);
        formPanel.add(lblAge);
        formPanel.add(txtAge);
        formPanel.add(buttonPanel);
        formPanel.add(lblSubject);
        formPanel.add(txtSubjects);
        formPanel.add(lblSubject);

        int result = JOptionPane.showConfirmDialog(null, formPanel, "Añadir maestro", JOptionPane.OK_CANCEL_OPTION,0,new ImageIcon("src/main/java/resources/icons/add.png"));
        if(result == JOptionPane.OK_OPTION){
            String name = txtName.getText();
            String age = txtAge.getText();
            String subject = txtSubjects.getText();
            seeTeacherInformation();
        }
    }//GEN-LAST:event_btnAddTeacherActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        JTable target = (JTable) evt.getSource();
        int row = target.getSelectedRow();
        if(row != -1){
            mainOperations.showTeacherDetails(jTable1.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void studentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsTableMouseClicked
        JTable target = (JTable) evt.getSource();
        int row = target.getSelectedRow();
        if(row != -1){
            mainOperations.seeStudentDetails(studentsTable.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_studentsTableMouseClicked

    private void subjectsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subjectsTableMouseClicked
        JTable target = (JTable) evt.getSource();
        int row = target.getSelectedRow();
        if(row != -1){
            mainOperations.showSubjectDetails(subjectsTable.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_subjectsTableMouseClicked

    private void btnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddStudentActionPerformed

    private void btnUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateStudentActionPerformed

    private void btnRemoveStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveStudentActionPerformed

    private void btnAddSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddSubjectActionPerformed

    private void btnUpdateSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSubjectActionPerformed

    }//GEN-LAST:event_btnUpdateSubjectActionPerformed


    public void manageTeachersItems(boolean token) {
        if (!token) {
            btnAddTeacher = new javax.swing.JButton();
            btnAddTeacher.setBackground(new java.awt.Color(0, 102, 0));
            btnAddTeacher.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
            btnAddTeacher.setForeground(new java.awt.Color(255, 255, 255));
            btnAddTeacher.setText("Añadir ");
            btnAddTeacher.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnAddTeacher);
            btnAddTeacher.setBounds(760, 270, 140, 40);

            btnUpdateTeacher = new javax.swing.JButton();
            btnUpdateTeacher.setBackground(new java.awt.Color(0, 102, 0));
            btnUpdateTeacher.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
            btnUpdateTeacher.setForeground(new java.awt.Color(255, 255, 255));
            btnUpdateTeacher.setText("Actualizar");
            btnUpdateTeacher.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnUpdateTeacher);
            btnUpdateTeacher.setBounds(760, 340, 140, 40);

            btnDeleteTeacher = new javax.swing.JButton();
            btnDeleteTeacher.setBackground(new java.awt.Color(0, 102, 0));
            btnDeleteTeacher.setFont(new java.awt.Font("Lemon", 1, 14)); // NOI18N
            btnDeleteTeacher.setForeground(new java.awt.Color(255, 255, 255));
            btnDeleteTeacher.setText("Borrar");
            btnDeleteTeacher.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnDeleteTeacher);
            btnDeleteTeacher.setBounds(760, 410, 140, 40);

            jScrollPane1 = new javax.swing.JScrollPane();
            jTable1 = new javax.swing.JTable();
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null}
                    },
                    new String [] {
                            "Nombre", "Instructor", "Semestre", "Cantidad de alumnos"
                    }
            ));
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(jTable1);

            getContentPane().add(jScrollPane1);
            jScrollPane1.setBounds(180, 210, 456, 406);

            seeTeacherInformation();

            teachersShownToken = true;
        }else{
            deleteTeacherItems();
        }
    }

    public void deleteTeacherItems(){
        getContentPane().remove(btnAddTeacher);
        getContentPane().remove(btnDeleteTeacher);
        getContentPane().remove(btnUpdateTeacher);
        getContentPane().remove(jScrollPane1);
        getContentPane().remove(jTable1);
        getContentPane().repaint();
        teachersShownToken = false;
    }

    public void manageStudentItems(boolean token) {
        if (!token) {
            jScrollPane2 = new javax.swing.JScrollPane();
            studentsTable = new javax.swing.JTable();
            studentsTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null}
                    },
                    new String [] {
                            "Matricula", "Nombre", "Edad", "Semestre"
                    }
            ));
            studentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    studentsTableMouseClicked(evt);
                }
            });
            jScrollPane2.setViewportView(studentsTable);

            getContentPane().add(jScrollPane2);
            jScrollPane2.setBounds(110, 230, 570, 406);

            btnRemoveStudent = new javax.swing.JButton();
            btnRemoveStudent.setBackground(new java.awt.Color(0, 102, 0));
            btnRemoveStudent.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnRemoveStudent.setForeground(new java.awt.Color(255, 255, 255));
            btnRemoveStudent.setText("Eliminar");
            btnRemoveStudent.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnRemoveStudent);
            btnRemoveStudent.setBounds(790, 470, 120, 40);

            btnAddStudent = new javax.swing.JButton();
            btnAddStudent.setBackground(new java.awt.Color(0, 102, 0));
            btnAddStudent.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnAddStudent.setForeground(new java.awt.Color(255, 255, 255));
            btnAddStudent.setText("Añadir");
            btnAddStudent.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnAddStudent);
            btnAddStudent.setBounds(790, 330, 120, 40);

            btnUpdateStudent = new javax.swing.JButton();
            btnUpdateStudent.setBackground(new java.awt.Color(0, 102, 0));
            btnUpdateStudent.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnUpdateStudent.setForeground(new java.awt.Color(255, 255, 255));
            btnUpdateStudent.setText("Actualizar");
            btnUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnUpdateStudent);
            btnUpdateStudent.setBounds(790, 400, 120, 40);

            seeStudentInformation();

            studentsShownToken = true;
        } else {
            deleteStudentItems();
        }
    }

    public void deleteStudentItems(){
        getContentPane().remove(btnAddStudent);
        getContentPane().remove(btnRemoveStudent);
        getContentPane().remove(btnUpdateStudent);
        getContentPane().remove(jScrollPane2);
        getContentPane().remove(studentsTable);
        getContentPane().repaint();
        studentsShownToken = false;
    }

    public void manageSubjectItems(boolean token) {
        if (!token) {
            jScrollPane3 = new javax.swing.JScrollPane();
            subjectsTable = new javax.swing.JTable();
            subjectsTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null}
                    },
                    new String [] {
                            "Nombre", "Instructor", "Semestre", "Cantidad de alumnos"
                    }
            ));
            subjectsTable.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    subjectsTableMouseClicked(evt);
                }
            });
            jScrollPane3.setViewportView(subjectsTable);

            getContentPane().add(jScrollPane3);
            jScrollPane3.setBounds(110, 230, 570, 406);

            btnAddSubject = new javax.swing.JButton();
            btnAddSubject.setBackground(new java.awt.Color(0, 102, 0));
            btnAddSubject.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnAddSubject.setForeground(new java.awt.Color(255, 255, 255));
            btnAddSubject.setText("Añadir");
            btnAddSubject.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnAddSubject);
            btnAddSubject.setBounds(790, 330, 120, 40);

            btnUpdateSubject = new javax.swing.JButton();
            btnUpdateSubject.setBackground(new java.awt.Color(0, 102, 0));
            btnUpdateSubject.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnUpdateSubject.setForeground(new java.awt.Color(255, 255, 255));
            btnUpdateSubject.setText("Actualizar");
            btnUpdateSubject.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    // Your code here
                }
            });
            getContentPane().add(btnUpdateSubject);
            btnUpdateSubject.setBounds(790, 400, 120, 40);

            seeSubjectsInformation();

            subjectsShownToken = true;
        } else {
            deleteSubjectItems();
        }
    }

    public void deleteSubjectItems(){
        getContentPane().remove(btnAddSubject);
        getContentPane().remove(btnUpdateSubject);
        getContentPane().remove(jScrollPane3);
        getContentPane().remove(subjectsTable);
        getContentPane().repaint();
        subjectsShownToken = false;
    }

    public void manageGradeItems(boolean token){
        if (!token) {
            jScrollPane4 = new javax.swing.JScrollPane();
            gradesTable = new javax.swing.JTable();
            gradesTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null, null, null, null},
                            {null, null, null, null, null},
                            {null, null, null, null, null},
                            {null, null, null, null, null}
                    },
                    new String [] {
                            "Alumno", "Materia", "Primer Parcial", "Segundo Parcial","Tercer Parcial"
                    }
            ));
            jScrollPane4.setViewportView(gradesTable);



            getContentPane().add(jScrollPane4);
            jScrollPane4.setBounds(110, 230, 570, 406);

            cbGradesFilter = new javax.swing.JComboBox<>();
            cbGradesFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1er Semestre","2do Semestre", "3er Semestre", "4to Semestre"}));
            cbGradesFilter.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            cbGradesFilter.setForeground(new java.awt.Color(255, 255, 255));
            cbGradesFilter.setBackground(new java.awt.Color(0, 102, 0));
            getContentPane().add(cbGradesFilter);
            cbGradesFilter.setBounds(790, 230, 120, 40);

            cbGradesFilter.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    getSubjectInformation(String.valueOf(cbGradesFilter.getSelectedItem()));
                }
            });

            btnUpdateGrades = new javax.swing.JButton();
            btnUpdateGrades.setBackground(new java.awt.Color(0, 102, 0));
            btnUpdateGrades.setFont(new java.awt.Font("Lemon", 1, 12)); // NOI18N
            btnUpdateGrades.setForeground(new java.awt.Color(255, 255, 255));
            btnUpdateGrades.setText("Actualizar");
            btnUpdateGrades.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnUpdateSubjectActionPerformed(evt);
                }
            });

            getContentPane().add(btnUpdateGrades);
            btnUpdateGrades.setBounds(790, 360, 120, 40);

            chargeSubjectsCB();
            gradesShownToken = true;
        } else {
            deleteGradeItems();
        }
    }

    public void deleteGradeItems(){
        getContentPane().remove(btnUpdateGrades);
        getContentPane().remove(jScrollPane4);
        getContentPane().remove(cbGradesFilter);
        getContentPane().repaint();
        gradesShownToken = false;
    }

    //Method to see the information of all the admin options
    public void seeTeacherInformation() {
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        try{
            JSONParser parserTeacher = new JSONParser();
            JSONObject teacherInformation = (JSONObject) parserTeacher.parse(new FileReader(teacherSettings));
            JSONArray teachers = (JSONArray) teacherInformation.get("Docentes");

            for(Object teacher : teachers){
                JSONObject teacherObject = (JSONObject) teacher;
                JSONObject classes = (JSONObject) teacherObject.get("Materias");
                String[] dataRow = {(String) teacherObject.get("Matricula"), (String) teacherObject.get("Nombre"),String.valueOf(teacherObject.get("Edad")), String.valueOf(classes.size())};
                ((DefaultTableModel) jTable1.getModel()).addRow(dataRow);
            }
        }catch (Exception e){
            System.err.println("Error en " + e.getMessage());
        }
    }

    public void seeStudentInformation(){
        ((DefaultTableModel) studentsTable.getModel()).setRowCount(0);
        try{
            JSONParser studentParser = new JSONParser();
            JSONObject studentInformation = (JSONObject) studentParser.parse(new FileReader(studentSettings));
            JSONArray students = (JSONArray) studentInformation.get("Estudiantes");

            for(Object student : students){
                JSONObject studentObject = (JSONObject) student;
                String[] dataRow = {(String) studentObject.get("Matricula"), (String) studentObject.get("Nombre"),String.valueOf(studentObject.get("Semestre")), String.valueOf(studentObject.get("Edad"))};
                ((DefaultTableModel) studentsTable.getModel()).addRow(dataRow);
            }
        }catch (Exception e){
            System.err.println("Error en " + e.getMessage());
        }
    }

    public void seeSubjectsInformation(){
        ((DefaultTableModel) subjectsTable.getModel()).setRowCount(0);
        try {
            JSONParser parserSubject = new JSONParser();
            JSONObject subjectInformation = (JSONObject) parserSubject.parse(new FileReader(subjectSettings));
            JSONArray subjects = (JSONArray) subjectInformation.get("Materias");

            for (Object subject : subjects) {
                String[] dataRow = getSubjectsStrings((JSONObject) subject);
                ((DefaultTableModel) subjectsTable.getModel()).addRow(dataRow);
            }
        } catch (Exception e) {
            System.err.println("Error en " + e.getMessage());
        }
    }

    private static String[] getSubjectsStrings(JSONObject subject) {
        String []dataRow = new String[4];
        //Possible cause of error
        JSONArray students = (JSONArray) subject.get("Alumnos");
        for (Object student : students) {
            JSONObject studentObject = (JSONObject) student;
            dataRow = new String[]{
                    (String) subject.get("Nombre"),
                    (String) subject.get("Instructor"),
                    String.valueOf(subject.get("Semestre")),
                    String.valueOf(studentObject.size())
            };
        }
        //----

        return dataRow;
    }

    public void chargeSubjectsCB(){
        try{
            JSONParser gradesParser = new JSONParser();
            JSONObject gradesInformation = (JSONObject) gradesParser.parse(new FileReader(subjectSettings));
            JSONArray grades = (JSONArray) gradesInformation.get("Materias");
            String[] subjectsList = new String[grades.size()];

            for(int i = 0; i < grades.size(); i++){
                JSONObject grade = (JSONObject) grades.get(i);
                subjectsList[i] = (String) grade.get("Nombre");
            }
            cbGradesFilter.setModel(new DefaultComboBoxModel<>(subjectsList));
        }catch (Exception e){
            System.out.println("Error in line --> "+ e.getMessage());
        }
    }

    public void getSubjectInformation(String currentSubject){
        try(FileReader fr = new FileReader(subjectSettings)){
            Object obj = new JSONParser().parse(fr);
            //Information of parameters of the subject
            JSONObject gradesInformation = (JSONObject) obj;
            JSONArray grades = (JSONArray) gradesInformation.get("Materias");
            //Information of the students
            for(Object grade : grades) {
                JSONObject gradeObject = (JSONObject) grade;
                JSONArray students = (JSONArray) gradeObject.get("Alumnos");
                if (gradeObject.get("Nombre").equals(currentSubject)) {
                    ((DefaultTableModel) gradesTable.getModel()).setRowCount(0);
                    for (Object student : students) {
                        JSONObject studentObject = (JSONObject) student;
                        Set<String> studentKeys = studentObject.keySet();
                        for (String key : studentKeys) {
                            JSONObject gradesArray = (JSONObject) studentObject.get(key);
                            String[] dataRow = {
                                    key,
                                    (String) gradeObject.get("Nombre"),
                                    String.valueOf(gradesArray.get("Primer Parcial")),
                                    String.valueOf(gradesArray.get("Segundo Parcial")),
                                    String.valueOf(gradesArray.get("Tercer Parcial"))};
                            ((DefaultTableModel) gradesTable.getModel()).addRow(dataRow);
                        }
                    }
                }
            }
        }catch (Exception e) {
            System.out.println("Error in line --> " + e.getMessage());
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        UIManager.setLookAndFeel(new FlatMacDarkLaf());
        SwingUtilities.updateComponentTreeUI(new AdminMenu(mainToken));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMenu(mainToken).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnShowGrades;
    private javax.swing.JButton btnShowStudents;
    private javax.swing.JButton btnShowSubjects;
    private javax.swing.JButton btnShowTeachers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAdvertencia;
    private javax.swing.JLabel lblNombre;
    // End of variables declaration//GEN-END:variables
}
